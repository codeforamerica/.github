name: Deploy to Aptible Staging + Draft Release
# 1. Run tests on merges to main
# 2. (Attempt) to deploy to staging
# 3. if successful, draft release and merge main to staging branch

on:
  workflow_dispatch:
    inputs: { }

env:
  USERNAME: ${{ secrets.GPR_USER }}
  TOKEN: ${{ secrets.GPR_KEY }}
jobs:
  deploy:
    uses: codeforamerica/.github/reusable-workflows/deploy-to-aptible.yaml@main
    with:
      environment: staging
      deploy-handle: staging-deploy
      app-name: app-staging
    secrets:
      aptible_env_vars: $(cat ${{ secrets.APTIBLE_ENV_VARS_STAGING }})
      aptible_remote_url: ${{ secrets.APTIBLE_REMOTE_URL_STAGING }}
      aptible_ssh_private_key: ${{ secrets.APTIBLE_SSH_PRIVATE_KEY }}
      aptible_known_hosts: ${{ secrets.APTIBLE_KNOWN_HOSTS }}
      aptible_username: ${{ secrets.APTIBLE_USERNAME }}
      aptible_password: ${{ secrets.APTIBLE_PASSWORD }}

  draft-release:
    name: Draft a new release
    needs: deploy
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Create tag name
        id: create-tagname
        run: echo "::set-output name=TAG_NAME::$(date +'%Y-%m-%d-%H%M')"
      - name: Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
          release_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
          commitish: ${{ github.event.inputs.branch }}
          body: |
            Fill in details about this release
          draft: true
          prerelease: true
  merge_to_staging:
    name: Merge main -> staging
    needs: deploy
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          ref: main
      - uses: MaximeHeckel/github-action-merge-fast-forward@v1.1.1
        with:
          branchtomerge: main
          branch: staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

